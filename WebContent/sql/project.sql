-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- AREA_TABLE Table Create SQL
CREATE TABLE AREA_TABLE
(
    CITY       VARCHAR2(20)    NOT NULL, 
    TOWN       VARCHAR2(20)    NOT NULL, 
    AREA_NO    NUMBER(3)       NOT NULL, 
    CONSTRAINT AREA_TABLE_PK PRIMARY KEY (AREA_NO)
)
/


-- AREA_TABLE Table Create SQL
CREATE TABLE MEMBER_TABLE
(
    MEM_NO         NUMBER(6)         NOT NULL, 
    ID             VARCHAR2(16)      NOT NULL, 
    PWD            VARCHAR2(20)      NOT NULL, 
    MEM_NAME       VARCHAR2(20)      NOT NULL, 
    NICKNAME       VARCHAR2(20)      NOT NULL, 
    PROFILE_IMG    VARCHAR2(20)      NULL, 
    BIRTH          VARCHAR2(20)      NOT NULL, 
    E_MAIL         VARCHAR2(20)      NOT NULL, 
    PHONE          VARCHAR2(20)      NOT NULL, 
    CHECK_Q        VARCHAR2(20)      NOT NULL, 
    CHECK_A        VARCHAR2(20)      NOT NULL, 
    AREA1          NUMBER(3)         NOT NULL, 
    AREA2          NUMBER(3)         NULL, 
    AREA3          NUMBER(3)         NULL, 
    INTERESTS      VARCHAR2(2000)    NOT NULL, 
    CONSTRAINT MEMBER_TABLE_PK PRIMARY KEY (MEM_NO)
)
/

CREATE SEQUENCE MEMBER_TABLE_SEQ
START WITH 1
INCREMENT BY 1
nocache;
/

CREATE OR REPLACE TRIGGER MEMBER_TABLE_AI_TRG
BEFORE INSERT ON MEMBER_TABLE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT MEMBER_TABLE_SEQ.NEXTVAL
    INTO :NEW.MEM_NO
    FROM DUAL;
END;
/

--DROP TRIGGER MEMBER_TABLE_AI_TRG;


--DROP SEQUENCE MEMBER_TABLE_SEQ;


ALTER TABLE MEMBER_TABLE
    ADD CONSTRAINT FK_MEMBER_TABLE_AREA1_AREA_TAB FOREIGN KEY (AREA1)
        REFERENCES AREA_TABLE (AREA_NO);
/

ALTER TABLE MEMBER_TABLE
    ADD CONSTRAINT FK_MEMBER_TABLE_AREA2_AREA_TAB FOREIGN KEY (AREA2)
        REFERENCES AREA_TABLE (AREA_NO);
/

ALTER TABLE MEMBER_TABLE
    ADD CONSTRAINT FK_MEMBER_TABLE_AREA3_AREA_TAB FOREIGN KEY (AREA3)
        REFERENCES AREA_TABLE (AREA_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE INTEREST_TABLE
(
    L_CATEGORY     VARCHAR2(20)    NOT NULL, 
    S_CATEGORY     VARCHAR2(20)    NOT NULL, 
    INTEREST_NO    NUMBER(3)       NOT NULL, 
    CONSTRAINT INTEREST_TABLE_PK PRIMARY KEY (INTEREST_NO)
)
/


-- AREA_TABLE Table Create SQL
CREATE TABLE GROUP_TABLE
(
    GROUP_NO           NUMBER(6)         NOT NULL, 
    GROUP_NAME         VARCHAR2(100)     NOT NULL, 
    GROUP_INTRO        VARCHAR2(1000)    NULL, 
    GROUP_AREA         NUMBER(3)         NOT NULL, 
    GROUP_INTEREST     NUMBER(3)         NOT NULL, 
    GROUP_PREMIUM      NUMBER(1)         NOT NULL, 
    GROUP_LIMITMEM     NUMBER(3)         NOT NULL, 
    GROUP_CURRMEM      NUMBER(3)         NOT NULL, 
    GROUP_FRONT_IMG    NUMBER(3)         NULL, 
    GROUP_MAIN_IMG     VARCHAR2(1000)    NULL, 
    GROUP_INSTA        VARCHAR2(1000)    NULL, 
    GROUP_FACEBOOK     VARCHAR2(1000)    NULL, 
    GROUP_CHATROOM     VARCHAR2(1000)    NULL, 
    CONSTRAINT GROUP_TABLE_PK PRIMARY KEY (GROUP_NO)
)
/

CREATE SEQUENCE GROUP_TABLE_SEQ
START WITH 1
increment by 1 nocache;
/

CREATE OR REPLACE TRIGGER GROUP_TABLE_AI_TRG
BEFORE INSERT ON GROUP_TABLE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT GROUP_TABLE_SEQ.NEXTVAL
    INTO :NEW.GROUP_NO
    FROM DUAL;
END;
/

--DROP TRIGGER GROUP_TABLE_AI_TRG;


--DROP SEQUENCE GROUP_TABLE_SEQ;


ALTER TABLE GROUP_TABLE
    ADD CONSTRAINT FK_GROUP_TABLE_GROUP_AREA_AREA FOREIGN KEY (GROUP_AREA)
        REFERENCES AREA_TABLE (AREA_NO);
/

ALTER TABLE GROUP_TABLE
    ADD CONSTRAINT FK_GROUP_TABLE_GROUP_INTEREST_ FOREIGN KEY (GROUP_INTEREST)
        REFERENCES INTEREST_TABLE (INTEREST_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE BOARD_TABLE
(
    MGN_NO            NUMBER(6)         NOT NULL, 
    GROUP_NO          NUMBER(6)         NOT NULL, 
    BOARD_NO          NUMBER(6)         NOT NULL, 
    BOARD_CATEGORY    NUMBER(1)         NOT NULL, 
    BOARD_TITLE       VARCHAR2(50)      NOT NULL, 
    BOARD_CONT        VARCHAR2(4000)    NOT NULL, 
    BOARD_WRITER      VARCHAR2(20)      NOT NULL, 
    BOARD_DATE        DATE              NOT NULL, 
    BOARD_HIT         NUMBER(6)         NOT NULL, 
    BOARD_LIKE        NUMBER(6)         NOT NULL, 
    BOARD_PHOTO       VARCHAR2(500)     NULL, 
    BOARD_FILE        NUMBER(4)         NULL, 
    BOARD_GROUP       NUMBER(4)         NOT NULL, 
    BOARD_STEP        NUMBER(4)         NOT NULL, 
    BOARD_INDENT      NUMBER(4)         NOT NULL, 
    BOARD_IMP         NUMBER(1)         NOT NULL, 
    CONSTRAINT BOARD_TABLE_PK PRIMARY KEY (MGN_NO)
)
/

CREATE SEQUENCE BOARD_TABLE_SEQ
START WITH 1
increment by 1 nocache;
/

CREATE OR REPLACE TRIGGER BOARD_TABLE_AI_TRG
BEFORE INSERT ON BOARD_TABLE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT BOARD_TABLE_SEQ.NEXTVAL
    INTO :NEW.MGN_NO
    FROM DUAL;
END;
/

--DROP TRIGGER BOARD_TABLE_AI_TRG;


--DROP SEQUENCE BOARD_TABLE_SEQ;


ALTER TABLE BOARD_TABLE
    ADD CONSTRAINT FK_BOARD_TABLE_GROUP_NO_GROUP_ FOREIGN KEY (GROUP_NO)
        REFERENCES GROUP_TABLE (GROUP_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE COMMENT_TABLE
(
    MGN_NO            NUMBER(6)         NOT NULL, 
    COMMENT_NO        NUMBER(6)         NOT NULL, 
    COMMENT_WRITER    VARCHAR2(20)      NOT NULL, 
    COMMENT_CONT      VARCHAR2(4000)    NOT NULL, 
    COMMENT_DATE      DATE              NOT NULL, 
    CONSTRAINT COMMENT_TABLE_PK PRIMARY KEY (COMMENT_NO)
)
/

CREATE SEQUENCE COMMENT_TABLE_SEQ
START WITH 1
increment by 1 nocache;
/

CREATE OR REPLACE TRIGGER COMMENT_TABLE_AI_TRG
BEFORE INSERT ON COMMENT_TABLE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT COMMENT_TABLE_SEQ.NEXTVAL
    INTO :NEW.MGN_NO
    FROM DUAL;
END;
/

--DROP TRIGGER COMMENT_TABLE_AI_TRG;


--DROP SEQUENCE COMMENT_TABLE_SEQ;


ALTER TABLE COMMENT_TABLE
    ADD CONSTRAINT FK_COMMENT_TABLE_MGN_NO_BOARD_ FOREIGN KEY (MGN_NO)
        REFERENCES BOARD_TABLE (MGN_NO);


-- AREA_TABLE Table Create SQL
CREATE TABLE AUTHORITY_TABLE
(
    GROUP_NO                NUMBER(6)    NOT NULL, 
    R_NOTICE                NUMBER(1)    NOT NULL, 
    W_NOTICE                NUMBER(1)    NOT NULL, 
    R_HI                    NUMBER(1)    NOT NULL, 
    W_HI                    NUMBER(1)    NOT NULL, 
    R_MEET                  NUMBER(1)    NOT NULL, 
    W_MEET                  NUMBER(1)    NOT NULL, 
    R_FREE                  NUMBER(1)    NOT NULL, 
    W_FREE                  NUMBER(1)    NOT NULL, 
    R_PHOTO                 NUMBER(1)    NOT NULL, 
    W_PHOTO                 NUMBER(1)    NOT NULL, 
    AUTHORITY_IMPORTANT     NUMBER(1)    NOT NULL, 
    AUTHORITY_DELEGATION    NUMBER(1)    NOT NULL, 
    CONSTRAINT AUTHORITY_TABLE_PK PRIMARY KEY (GROUP_NO)
)
/

ALTER TABLE AUTHORITY_TABLE
    ADD CONSTRAINT FK_AUTHORITY_TABLE_GROUP_NO_GR FOREIGN KEY (GROUP_NO)
        REFERENCES GROUP_TABLE (GROUP_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE CAL_TABLE
(
    MEM_NO      NUMBER(6)         NOT NULL, 
    CAL_DATE    DATE              NOT NULL, 
    CAL_CONT    VARCHAR2(4000)    NOT NULL
)
/

ALTER TABLE CAL_TABLE
    ADD CONSTRAINT FK_CAL_TABLE_MEM_NO_MEMBER_TAB FOREIGN KEY (MEM_NO)
        REFERENCES MEMBER_TABLE (MEM_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE MEMBERSHIP_TABLE
(
    MEM_NO      NUMBER(6)    NOT NULL, 
    GROUP_NO    NUMBER(6)    NOT NULL, 
    RATING      NUMBER(1)    NOT NULL, 
    CONSTRAINT MEMBERSHIP_TABLE_PK PRIMARY KEY (MEM_NO, GROUP_NO)
)
/

ALTER TABLE MEMBERSHIP_TABLE
    ADD CONSTRAINT FK_MEMBERSHIP_TABLE_MEM_NO_MEM FOREIGN KEY (MEM_NO)
        REFERENCES MEMBER_TABLE (MEM_NO);
/

ALTER TABLE MEMBERSHIP_TABLE
    ADD CONSTRAINT FK_MEMBERSHIP_TABLE_GROUP_NO_G FOREIGN KEY (GROUP_NO)
        REFERENCES GROUP_TABLE (GROUP_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE LIKE_TABLE
(
    MEM_NO    NUMBER(6)    NOT NULL, 
    MGN_NO    NUMBER(6)    NOT NULL
)
/

ALTER TABLE LIKE_TABLE
    ADD CONSTRAINT FK_LIKE_TABLE_MGN_NO_BOARD_TAB FOREIGN KEY (MGN_NO)
        REFERENCES BOARD_TABLE (MGN_NO);
/

ALTER TABLE LIKE_TABLE
    ADD CONSTRAINT FK_LIKE_TABLE_MEM_NO_MEMBER_TA FOREIGN KEY (MEM_NO)
        REFERENCES MEMBER_TABLE (MEM_NO);
/


-- AREA_TABLE Table Create SQL
CREATE TABLE POST_TABLE
(
    POST_NO      NUMBER(6)         NOT NULL, 
    SENDER       NUMBER(6)         NOT NULL, 
    RECEIVER     NUMBER(6)         NOT NULL, 
    POST_DATE    DATE              NOT NULL, 
    POST_CONT    VARCHAR2(4000)    NOT NULL, 
    POST_READ    NUMBER(1)         NOT NULL, 
    CONSTRAINT POST_TABLE_PK PRIMARY KEY (POST_NO)
)
/

CREATE SEQUENCE POST_TABLE_SEQ
START WITH 1
increment by 1 nocache;
/

CREATE OR REPLACE TRIGGER POST_TABLE_AI_TRG
BEFORE INSERT ON POST_TABLE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT POST_TABLE_SEQ.NEXTVAL
    INTO :NEW.POST_NO
    FROM DUAL;
END;
/

--DROP TRIGGER POST_TABLE_AI_TRG;


--DROP SEQUENCE POST_TABLE_SEQ;


ALTER TABLE POST_TABLE
    ADD CONSTRAINT FK_POST_TABLE_SENDER_MEMBER_TA FOREIGN KEY (SENDER)
        REFERENCES MEMBER_TABLE (MEM_NO);
/

ALTER TABLE POST_TABLE
    ADD CONSTRAINT FK_POST_TABLE_RECEIVER_MEMBER_ FOREIGN KEY (RECEIVER)
        REFERENCES MEMBER_TABLE (MEM_NO);
/


